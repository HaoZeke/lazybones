apply plugin: "groovy"
apply plugin: "maven"


archivesBaseName = "lazybones-gradle"
group = "uk.co.cacoethes"
version = "1.2.4"

sourceCompatibility = "1.6"
targetCompatibility = "1.6"

ext {
    groovyVersion = "3.0.0-rc-3"
    cachePath = new File(System.getProperty("user.home"), ".lazybones/templates").absolutePath
    isCiBuild = System.getProperty("drone.io") as boolean
    testWorkDir = file("$buildDir/testWork").path
    spockVersion = "1.0-groovy-2.4"
}
repositories {
    mavenCentral()
}

dependencies {
    // gradleApi() drags in the Groovy bundled with Gradle, so always a good idea
    // to specify localGroovy() too
    compile localGroovy(), gradleApi()

    testCompile "org.spockframework:spock-core:${spockVersion}", {
        exclude module: "groovy-all"
    }
    testCompile "cglib:cglib-nodep:2.2.2"
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: groovydoc) {
    classifier = 'javadoc'
    from groovydoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

uploadArchives { task ->
    repositories {
        mavenDeployer {

            // Not every build user will want to publish the plugin, so defer
            // resolution of the publishing credentials.
            gradle.taskGraph.whenReady { graph ->
                if (graph.hasTask(task)) {
                    verifyProperty(project, 'repo.url')
                    verifyProperty(project, 'repo.username')
                    verifyProperty(project, 'repo.apiKey')

                    repository url: "https://api.bintray.com/maven/pledbrook/plugins/lazybones-gradle", {
                        authentication userName: project.'repo.username', password: project.'repo.apiKey'
                    }
                }
            }
        }
    }
}

void verifyProperty(Project proj, String name) {
    if (!project.hasProperty(name)) {
        throw new GradleException("You must define the project property '$name'")
    }
}
